version: "3"

services:
  nginx:
    build:
      context: ./nginx/
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/html/:/usr/share/nginx/html/
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    links:
      - vaultwarden
      - next-blog
      - portainer
      - pocketbase
      - uptime-kuma
    labels:
      - "com.centurylinklabs.watchtower.enable=false"

  certbot:
    image: certbot/certbot:arm64v8-latest
    profiles: ["cert"]
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  pocketbase:
    build:
      context: ./pocketbase
    ports:
      - 8090:8090
    volumes:
      - ./pocketbase/data:/pb_data

  vaultwarden:
    image: vaultwarden/server:latest
    ports:
      - 8080:80
      - 3012:3012
    volumes:
      - ./vault/data/:/data/
    labels:
      - "com.centurylinklabs.watchtower.enable=false"

  uptime-kuma:
    image: louislam/uptime-kuma:latest
    ports:
      - 3001:3001
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - ./uptime-kuma/data:/app/data

  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - 8000:8000
      - 9443:9443
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer/data:/data

  next-blog:
    image: nafiasib/next-blog:latest
    ports:
      - 3010:3000
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_POLL_INTERVAL=1800

  headscale:
    container_name: headscale
    volumes:
      - ./headscale/config:/etc/headscale/
      - ./headscale/keys:/var/lib/headscale/
    ports:
      - 8081:8080
      - 9090:9090
    image: headscale/headscale:latest
    command: headscale serve
    restart: unless-stopped

  tailscale:
    container_name: tailscale
    image: tailscale/tailscale:stable
    hostname: headtailscale
    volumes:
      - ./tailscale/data:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    network_mode: "host"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_EXTRA_ARGS=--login-server=<domain> --advertise-exit-node --advertise-routes=192.168.0.0/16 --accept-dns=true
      - TS_NO_LOGS_NO_SUPPORT=true
      - TS_AUTHKEY=<key>
    restart: unless-stopped
